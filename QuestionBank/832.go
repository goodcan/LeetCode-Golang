// @Time     : 2021/2/24 14:47
// @Author   : cancan
// @File     : 832.go
// @Function : 翻转图像

/*
 * Question:
 * 给定一个二进制矩阵 A，我们想先水平翻转图像，然后反转图像并返回结果。
 * 水平翻转图片就是将图片的每一行都进行翻转，即逆序。
 * 例如，水平翻转 [1, 1, 0] 的结果是 [0, 1, 1]。
 * 反转图片的意思是图片中的 0 全部被 1 替换， 1 全部被 0 替换。
 * 例如，反转 [0, 1, 1] 的结果是 [1, 0, 0]。
 *
 * Example 1:
 * 输入: [[1,1,0],[1,0,1],[0,0,0]]
 * 输出: [[1,0,0],[0,1,0],[1,1,1]]
 * 解释: 首先翻转每一行: [[0,1,1],[1,0,1],[0,0,0]]；
 *      然后反转图片: [[1,0,0],[0,1,0],[1,1,1]]
 *
 * Example 2:
 * 输入: [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]
 * 输出: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]
 * 解释: 首先翻转每一行: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]]；
 *      然后反转图片: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]
 *
 * Note:
 * 1 <= A.length = A[0].length <= 20
 * 0 <= A[i][j] <= 1
 */

package QuestionBank

func flipAndInvertImage(A [][]int) [][]int {
	for _, item := range A {
		for i, j := 0, len(item)-1; i < j; i, j = i+1, j-1 {
			item[i], item[j] = item[j], item[i]
		}
		for i, v := range item {
			if v == 1 {
				item[i] = 0
			} else {
				item[i] = 1
			}
		}
	}
	return A
}
